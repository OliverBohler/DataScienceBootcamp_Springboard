import json from sklearn.metrics import classification_report, confusion_matrix, roc_auc_score, accuracy_score # Given outputs from your reference accuracy = 0.68 # Extracted from the reference roc_auc = 0.7341 # Extracted from the reference # Classification Report class_report = { "0": { "precision": 0.71, "recall": 0.75, "f1-score": 0.73, "support": 89540 }, "1": { "precision": 0.63, "recall": 0.59, "f1-score": 0.61, "support": 66814 }, "accuracy": 0.68, "macro avg": { "precision": 0.67, "recall": 0.67, "f1-score": 0.67, "support": 156354 }, "weighted avg": { "precision": 0.68, "recall": 0.68, "f1-score": 0.68, "support": 156354 } } # Confusion Matrix conf_matrix = { "true_negatives": 66796, "false_positives": 22744, "false_negatives": 27429, "true_positives": 39385 } # Hyperparameters hyperparameters = { "objective": "binary:logistic", "n_estimators": 100, "max_depth": 6, "learning_rate": 0.1, "subsample": 0.8, "colsample_bytree": 0.8, "random_state": 42 } # Combine all metrics into a single dictionary metrics = { "model_name": "XGBoost_Arrest_Prediction", "accuracy": accuracy, "roc_auc": roc_auc, "classification_report": class_report, "confusion_matrix": conf_matrix, "hyperparameters": hyperparameters, "timestamp": "2025-01-06T18:30:00Z" # Update as needed } # Save to a JSON file output_file = "lapd_model_metrics.json" with open(output_file, "w") as file: json.dump(metrics, file, indent=4) print(f"LAPD model metrics saved to {output_file}")